# Multi-stage build for Google Cloud Run
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json pnpm-lock.yaml* ./
RUN npm install -g pnpm && pnpm install --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
ENV NEXT_TELEMETRY_DISABLED 1

RUN npm install -g pnpm && pnpm run build

# Production image optimized for Cloud Run
FROM ubuntu:22.04 AS runner
WORKDIR /app

# Install Node.js and development tools
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    lsb-release \
    ca-certificates \
    # Install Node.js 18
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    # Install compilers and interpreters for code execution
    && apt-get install -y \
        gcc \
        g++ \
        make \
        python3 \
        python3-pip \
        # Java (optional)
        default-jdk \
        # Utilities (timeout is built into coreutils, time is separate)
        coreutils \
        time \
    && rm -rf /var/lib/apt/lists/*

# Install popular Python packages
RUN pip3 install \
    numpy \
    pandas \
    matplotlib \
    requests \
    json5

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV PORT 8080
ENV HOSTNAME "0.0.0.0"

# Create system user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy Next.js app
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Create temp directory for code execution
RUN mkdir -p /app/temp && chown nextjs:nodejs /app/temp

# Create secure execution environment
RUN mkdir -p /app/sandbox && chown nextjs:nodejs /app/sandbox

USER nextjs

EXPOSE 8080

CMD ["node", "server.js"]
